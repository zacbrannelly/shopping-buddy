package com.zacbrannelly.shoppingbuddy.ui.weeklyplanner

import android.app.ActivityOptions
import android.content.Intent
import androidx.lifecycle.ViewModelProviders
import android.os.Bundle
import android.util.Pair
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import androidx.lifecycle.observe
import androidx.navigation.fragment.findNavController
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.google.android.material.floatingactionbutton.FloatingActionButton
import com.zacbrannelly.shoppingbuddy.R
import com.zacbrannelly.shoppingbuddy.ui.RecipeListAdapter
import com.zacbrannelly.shoppingbuddy.ui.detail.RecipeDetailActivity

private const val TAG = "WeeklyPlannerFragment"

class WeeklyPlannerFragment : Fragment() {

    companion object {
        fun newInstance() = WeeklyPlannerFragment()
    }

    private lateinit var viewModel: WeeklyPlannerViewModel
    private lateinit var recipeList: RecyclerView
    private var lastSharedImageView: ImageView? = null

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater
            .inflate(R.layout.fragment_weekly_planner, container, false)

        recipeList = view.findViewById(R.id.recipe_list)

        view.findViewById<FloatingActionButton>(R.id.add_button).setOnClickListener {
            // Open the Select Recipe Fragment.
            startActivity(Intent(context, SelectRecipeActivity::class.java))
        }

        return view
    }

    override fun onActivityCreated(savedInstanceState: Bundle?) {
        super.onActivityCreated(savedInstanceState)
        viewModel = ViewModelProviders.of(this).get(WeeklyPlannerViewModel::class.java)

        val viewAdapter = RecipeListAdapter(
            requireContext(),
            { item, image ->
                // Setup shared element transition.
                val options = ActivityOptions.makeSceneTransitionAnimation(requireActivity(), Pair(image, "imageView"))

                // Ensure last item selected has transition name reset.
                lastSharedImageView?.transitionName = null

                // Track the next image to be used in the animation.
                lastSharedImageView = image
                image.transitionName = "imageView"

                // Start the detail activity.
                startActivity(
                    Intent(context, RecipeDetailActivity::class.java),
                    options.toBundle()
                )
            },
            {
                // Notify view model of the order change (via dragging of items).
                viewModel.onListOrderChange()
            }
        )

        // Observe the recipe list generated by the view model.
        viewModel.recipes.observe(viewLifecycleOwner) { recipeList ->
            viewAdapter.setItems(recipeList)
        }

        recipeList.isNestedScrollingEnabled = false

        recipeList.apply {
            layoutManager = LinearLayoutManager(context)
            adapter = viewAdapter
        }
    }

}